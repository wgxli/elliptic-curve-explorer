{"version":3,"sources":["math/display.js","components/ControlBar/Equation/Term/Term.js","components/ControlBar/Equation/Equation.js","components/ControlBar/ControlBar.js","components/DisplayEquation.js","components/InfoBar/Discriminant.js","components/InfoBar/ReducedForm.js","components/InfoBar/GroupStructure.js","components/InfoBar/index.js","math/analysis.js","math/graphics.js","components/MainView/scene.js","components/MainView/transitions.js","components/MainView/render.js","components/MainView/MainView.js","math/bigRational.js","math/affineMap.js","math/reduce.js","math/numberTheory.js","math/rationalPoint.js","math/curve.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["renderCoefficient","n","hideUnit","arguments","length","undefined","first","sign","lt","bigInt","zero","minus","eq","renderTerm","monomial","_renderCoefficient","_renderCoefficient2","Object","slicedToArray","coefficient","join","renderPolynomial","coefficients","monomials","terms","i","term","push","Term","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","pointerDown","e","changeCoefficient","deltaY","delta","props","setCoefficient","plus","_this2","classes","faded","react_default","a","createElement","className","react_katex","onWheel","handleWheel","bind","onClick","PureComponent","affine_monomials","homogeneous_monomials","Equation","v","Equation_Term_Term","key","getCoefficientSetter","homogeneous","concat","renderTerms","ControlBar","_this$props","view3D","handle3DSwitch","curve","AppBar_default","appBar","Toolbar_default","controlBar","disableGutters","ControlBar_Equation_Equation","Switch_default","checked","onChange","color","withStyles","theme","zIndex","backgroundColor","flexDirection","DisplayEquation","latex","children","map","toString","x","style","fontSize","overflowX","overflowY","width","whiteSpace","math","Discriminant","_ref","reduced","discriminant","factorization","output","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","_ref2","k","err","return","renderFactorization","discriminantFactorization","components_DisplayEquation","window","innerWidth","ReducedForm","curve_basis","_reduced$coefficients","b","map_basis","multiplier","denominator","slice","GroupStructure","group","order","torsionPoints","p","sort","orders","Z","cyclic","includes","getGroupName","InfoBar","InfoBar_Discriminant","InfoBar_ReducedForm","InfoBar_GroupStructure","findRoots","Math","cbrt","pow","roots","alpha","sqrt","beta","acos","cos","PI","SEGMENTS","INFINITY","affineCurveGeometry","_curve$map","toJSNumber","_curve$map2","f","y","isNaN","xLists","multiComponent","shift","extremum","root","local_scale","max","abs","points","sinh","componentSize","pointsA","omegaA","radiusA","centerA","multiplierB","pointsB","apply","affineCurvePoints","xList","yList","reversePoints","reverse","inverseMap","inverse","_i","_output","component","X","Y","_inverseMap$transform","transformFloat","_inverseMap$transform2","array","Float32Array","pushPoints","z","norm","curveSurfaceGeometry","affinePoints","index","loopPoints","nPoints","mainPoints","offset","curr","last","orbitControls","scene","THREE","camera","innerHeight","curveLineMaterial","linewidth","curveLineGeoA","addAttribute","curveLineA","add","curveLineGeoB","curveLineB","axesMaterial","axesGeo","axes","position","setY","yAxisMaterial","transparent","opacity","yAxisGeo","yAxis","visible","curveSurfaceMaterial","side","curveSurfaceGeo","geoPoints","setIndex","curveSurface","planeMaterial","planeGeo","plane","rotateX","ambientLight","directionalLight","target","set","light","toggle3DList","transitions","EPSILON","cubicEase","cosineEase","start3DTransition","SCENE","enabled","now","Date","getTime","cameraTarget","clone","cameraPosition","sub","cameraDistance","initialQuaternion","quaternion","targetQuaternion","normalize","unshift","t","start","stop","radius","q0","q1","slerp","newPosition","applyQuaternion","copy","updateProjectionMatrix","orbitCameraTransition","shiftAxesTransition","material","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","obj","toggleSurfacesTransition","enableControlsTransition","targetTime","controls","enableRotate","enableDamping","mouseButtons","LEFT","RIGHT","renderer","initialized","handleResize","setSize","aspect","initialize","canvas","document","getElementById","antialias","logarithmicDepthBuffer","setPixelRatio","devicePixelRatio","addEventListener","initializeRenderer","OrbitControls","dampingFactor","rotateSpeed","screenSpacePanning","TRANS","skip","frame","debug","animate","requestAnimationFrame","render","update","uxScale","scale","setScalar","running","transition","pop","MainView","renderScene","newView3D","curveGeo","geoA","geometry","posA","attributes","geoB","posB","copyArray","needsUpdate","computeBoundingSphere","surfaceGeo","surfacePos","_curveSurfaceGeometry","_curveSurfaceGeometry2","computeVertexNormals","updateCurve","id","BigRational","numerator","d","reduce","gcd","divide","other","times","negate","reciprocal","exponent","powers","answer","gt","AffineMap","_this$coefficients","c","_other$coefficients","A","B","C","D","E","F","_this$coefficients2","determinant","den","_this$coefficients$ma","_this$coefficients$ma2","_this$coefficients$ma3","_this$coefficients$ma4","_this$coefficients3","mapString","IdentityMap","functions","reduceFull","_curve","_curve2","_curve3","one","leq","isDivisibleBy","overallMap","_f","_f2","compose","sieve","Array","fill","j","small_primes","RationalPoint","reducedCurve","Number","NaN","isIdentity","getIdentity","slope","_this$curve$coefficie","_this$curve$coefficie2","intercept","quadratic","syntheticDivide","substitute","_loop","_ret","Infinity","remainder","Curve","_len","_key","computeReduction","computeTorsionPoints","_reduceFull","_reduceFull2","ReducedCurve","_getPrototypeOf2","toConsumableArray","_i2","_small_primes","prime","factor","computeDiscriminant","candidates","getCandidateTorsionPoints","construct","isFinite","yCandidates","currentCandidates","_yCandidates","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","round","_this$coefficients4","createMuiTheme","palette","primary","blue","App","state","setState","styles","components_ControlBar_ControlBar","toggle3DView","components_MainView_MainView","components_InfoBar","Boolean","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76249255.chunk.js","sourcesContent":["import bigInt from 'big-integer';\n\n\nfunction renderCoefficient(n, hideUnit=true, first=false) {\n    var sign = n.lt(0) ? '-' : '+';\n\n    if (first && sign === '+') {\n        sign = '';\n    }\n\n    if (n.lt(0)) {\n        n = bigInt.zero.minus(n);\n    }\n\n    if (n.eq(1) && hideUnit) {\n        n = '';\n    }\n\n    return [sign, n];\n}\n\n\nfunction renderTerm(n, monomial='', first=false) {\n    n = bigInt(n);\n    const [sign, coefficient] = renderCoefficient(\n        n, (monomial !== ''), first);\n\n    if (n.eq(0)) {\n        return '';\n    } else {\n        return [sign, coefficient, monomial].join('');\n    }\n}\n\nfunction renderPolynomial(coefficients, monomials, first=true) {\n    const terms = []\n\n    for (var i=0; i < coefficients.length; i++) {\n        const term = renderTerm(coefficients[i], monomials[i], first);\n        if (term !== '') {\n            terms.push(term);\n            first = false;\n        }\n    }\n    return terms.join('');\n}\n\nfunction renderFactorization(factorization) {\n    const output = [];\n\n    for (var [k, v] of factorization) {\n        if (v === 1) {\n            output.push(k);\n        } else {\n            output.push(k + '^{' + v + '}');\n        }\n    }\n\n    return output.join('\\\\cdot');\n}\n\n\nexport {\n    renderCoefficient,\n    renderTerm,\n    renderPolynomial,\n    renderFactorization\n};\n","import React, {PureComponent} from 'react';\nimport {InlineMath} from 'react-katex';\n\nimport bigInt from 'big-integer';\n\nimport {renderCoefficient} from 'math/display.js';\n\n\nclass Term extends PureComponent {\n    constructor() {\n        super();\n        this.pointerDown = false;\n    }\n\n    handleWheel(e) {\n        this.changeCoefficient((e.deltaY > 0) ? -1 : 1);\n    }\n\n    changeCoefficient(delta) {\n        this.props.setCoefficient(this.props.coefficient.plus(bigInt(delta)));\n    }\n\n    render() {\n        const [sign, coefficient] = renderCoefficient(\n            this.props.coefficient,\n            this.props.monomial !== '',\n            this.props.first\n        );\n\n\n        var classes = 'equation-term';\n        const faded = this.props.coefficient.eq(0);\n        if (faded) {classes += ' faded';}\n        return <span className={'term-wrapper' + (faded ? ' faded' : '')}>\n            <InlineMath>{sign + '~'}</InlineMath>\n            <span\n                className={classes}\n                onWheel={this.handleWheel.bind(this)}\n            >\n                <div\n                  className='arrow-container up'\n                    onClick={() => this.changeCoefficient(1)}><span className='arrow'/></div>\n                <InlineMath>\n                    {coefficient + this.props.monomial}\n                </InlineMath>\n                <div\n                  className='arrow-container down'\n                    onClick={() => this.changeCoefficient(-1)}><span className='arrow'/></div>\n            </span>\n        </span>;\n    }\n}\n\nexport default Term;\n","import React, {PureComponent} from 'react';\nimport {InlineMath} from 'react-katex';\n\nimport Term from './Term/Term.js';\nimport './Equation.css';\n\n\nconst affine_monomials = [\n    'y^2', 'xy', 'y',\n    'x^3', 'x^2', 'x', ''];\nconst homogeneous_monomials = [\n    'y^2z', 'xyz', 'yz^2',\n    'x^3', 'x^2z', 'xz^2', 'z^3'];\n\nclass Equation extends PureComponent {\n    getCoefficientSetter(i) {\n        return (function(v) {\n            this.props.setCoefficient(i, v);\n        }).bind(this);\n    }\n\n    renderTerm(i, monomial) {\n        return (\n            <Term\n                key={i}\n                coefficient={this.props.coefficients[i]}\n                monomial={monomial}\n                setCoefficient={this.getCoefficientSetter(i)}\n            />);\n    }\n\n    renderTerms() {\n        const monomials = this.props.homogeneous ? homogeneous_monomials : affine_monomials;\n        const terms = [\n            <InlineMath key={-1}>{monomials[0]}</InlineMath>,\n            this.renderTerm(0, monomials[1]),\n            this.renderTerm(2, monomials[2]),\n            <InlineMath key={-2}>{`~= ${monomials[3]}`}</InlineMath>,\n            this.renderTerm(1, monomials[4]),\n            this.renderTerm(3, monomials[5]),\n            this.renderTerm(4, monomials[6]),\n        ];\n        return terms;\n    }\n\n    render() {\n        const {homogeneous} = this.props;\n        return (\n            <div className={\n                'main-equation' + (homogeneous ? ' homogeneous' : '')\n            }>\n                {this.renderTerms()}\n            </div>\n        );\n    }\n}\n\nexport default Equation;\n","import React, {PureComponent} from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Switch from '@material-ui/core/Switch';\n\nimport {withStyles} from '@material-ui/core/styles';\n\nimport Equation from './Equation/Equation.js';\nimport './ControlBar.css';\n\nconst styles = theme => ({\n    appBar: {\n        zIndex: 5000\n    },\n    controlBar: {\n        backgroundColor: 'white',\n        color: 'black',\n        flexDirection: 'row',\n    }\n});\n\nclass ControlBar extends PureComponent {\n    render() {\n        const {\n            view3D, handle3DSwitch,\n            curve, setCoefficient,\n            classes\n        } = this.props;\n\n        return (\n            <AppBar className={classes.appBar}>\n                <Toolbar\n                    className={classes.controlBar + ' control-bar'}\n                    disableGutters\n                >\n                    <div className='equation-container'>\n                        <Equation\n                            coefficients={curve.coefficients}\n                            setCoefficient={setCoefficient}\n                            homogeneous={view3D}\n                        />\n                    </div>\n                    <span className='options'>\n                        2D\n                        <Switch\n                            checked={view3D}\n                            onChange={handle3DSwitch}\n                            color='primary'\n                        />\n                        3D\n                    </span>\n                    <div className='mobile-view-switcher'>\n                        <div onClick={handle3DSwitch} className={\n                            'entry' + (view3D ? '' : ' selected')\n                        }>2D</div>\n                        <div onClick={handle3DSwitch} className={\n                            'entry' + (view3D ? ' selected' : '')\n                        }>3D</div>\n                    </div>\n                </Toolbar>\n            </AppBar>\n        );\n    }\n}\n\nexport default withStyles(styles)(ControlBar);\n","import React, {PureComponent} from 'react';\n\nimport {InlineMath} from 'react-katex';\n\n\nclass DisplayEquation extends PureComponent {\n\trender() {\n\t\tvar latex;\n\t\tif (typeof this.props.children.map === 'undefined') {\n\t\t\tlatex = this.props.children.toString();\n\t\t} else {\n\t\t\tlatex = this.props.children.map((x) => x.toString()).join('');\n\t\t}\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName='display-equation'\n\t\t\t\tstyle={{\n\t\t\t\t\tfontSize: this.props.fontSize,\n\t\t\t\t\toverflowX: 'auto',\n\t\t\t\t\toverflowY: 'hidden',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\twhiteSpace: 'nowrap'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<InlineMath math={latex}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DisplayEquation;\n","import React from 'react';\n\nimport DisplayEquation from 'components/DisplayEquation.js';\n\nimport {renderFactorization} from 'math/display.js';\n\nfunction Discriminant({curve}) {\n    const {reduced} = curve;\n    const {discriminant, discriminantFactorization} = reduced;\n\n    let factorization = renderFactorization(discriminantFactorization);\n    if (discriminant.lt(0)) {\n        factorization = '-' + factorization;\n    }\n    if (discriminant.eq(0)) {\n        factorization = '0';\n    }\n\n    return <div className='discriminant'>\n    <h2>Discriminant</h2>\n        <DisplayEquation fontSize={window.innerWidth > 600 ? 20 : 16}>\n        \\Delta =\n        {discriminant}\n    </DisplayEquation>\n    <div className='faded'>\n        <DisplayEquation fontSize={12}>\n            ({factorization})\n        </DisplayEquation>\n    </div>\n    </div>\n}\n\nexport default Discriminant;\n","import React from 'react';\n\nimport DisplayEquation from 'components/DisplayEquation.js';\n\nimport {renderPolynomial} from 'math/display.js';\n\n\nfunction ReducedForm({curve, homogeneous}) {\n    const {reduced} = curve;\n    const curve_basis = homogeneous ? ['X^3', 'XZ^2', 'Z^3'] : ['X^3', 'X', ''];\n    const [a, b] = reduced.coefficients;\n\n    const map = reduced.map;\n    const map_basis = homogeneous ? ['x', 'y', 'z'] : ['x', 'y', ''];\n    const multiplier = (map.denominator.eq(1))\n        ? '' : `\\\\frac{1}{${map.denominator}}`;\n\n    return <div className='reduced-form'>\n        <h2>Reduced Form</h2>\n        <DisplayEquation fontSize={window.innerWidth > 600 ? 20 : 16}>\n            {homogeneous ? 'Y^2 Z' : 'Y^2'}\n            =\n            {renderPolynomial([1, a, b], curve_basis)}\n        </DisplayEquation>\n        <div className='faded'>\n        <DisplayEquation fontSize={12}>\n            {homogeneous ? '[X:Y:Z]' : '(X, Y)'}\n            :=\n            {multiplier + (homogeneous ? '[' : '(')}\n            {renderPolynomial(\n                map.coefficients.slice(0, 3), map_basis)}\n            {homogeneous ? ':' : ','}\n            {renderPolynomial(\n                map.coefficients.slice(3, 6), map_basis)}\n            {homogeneous ? ':z]' : ')'}\n        </DisplayEquation>\n        </div>\n    </div>;\n}\n\nexport default ReducedForm;\n","import React from 'react';\n\nimport DisplayEquation from 'components/DisplayEquation.js';\n\n\nfunction getGroupName(order, orders) {\n    const Z = '\\\\mathbb{Z}'\n    const cyclic = (n) => Z + '_{' + n + '}';\n\n    var group;\n    if (order === 1) {\n        group = Z + '^r';\n    } else if ([2, 3, 5, 6, 7, 9].includes(order)) {\n        group = cyclic(order);\n    } else {\n        group = orders.includes(order)\n            ? cyclic(order)\n            : '(' + cyclic(order/2) + '\\\\times' + cyclic(2) + ')';\n    }\n    if (order !== 1) {\n        group += '\\\\times ' + Z + '^r';\n    }\n    return group;\n}\n\nfunction GroupStructure({curve}) {\n    const {reduced} = curve;\n\n    let group = '\\\\text{N/A}';\n\n    if (!reduced.discriminant.eq(0)) {\n        // Torsion subgroup\n        const order = reduced.torsionPoints.length;\n        const torsionPoints = reduced.torsionPoints.map(\n            (p) => [p, p.order()]\n        );\n        torsionPoints.sort((a, b) => a[1] - b[1]);\n        const orders = torsionPoints.map((x) => x[1]);\n        group = `E(\\\\mathbb{Q}) \\\\cong ${getGroupName(order, orders)}`;\n    }\n\n    return <div className='group-structure'>\n        <h2>Group Structure</h2>\n        <DisplayEquation fontSize={window.innerWidth > 600 ? 20 : 16}>\n            {group}\n        </DisplayEquation>\n    </div>;\n}\n\nexport default GroupStructure;\n","import React from 'react';\nimport './index.css';\n\nimport Discriminant from './Discriminant';\nimport ReducedForm from './ReducedForm';\nimport GroupStructure from './GroupStructure';\n\nfunction InfoBar({curve, view3D}) {\n    return <div className='info-bar'>\n        <Discriminant curve={curve}/>\n        <ReducedForm curve={curve} homogeneous={view3D}/>\n        <GroupStructure curve={curve}/>\n    </div>;\n}\n\nexport default InfoBar;\n","/*\n * Finds the real roots of f(x) = x^3 + ax + b.\n */\nfunction findRoots(a, b) {\n\tif (a === 0) {\n\t\treturn [-Math.cbrt(b)];\n\t}\n\n\tconst discriminant = -16 * (4*Math.pow(a, 3) + 27*Math.pow(b, 2));\n\n\tif (discriminant === 0) {\n\t\t// Multiple root\n\t\tconst roots = [3*b/a, -3*b/(2*a)];\n\t\troots.sort((a, b) => a-b);\n\t\treturn roots;\n\t} else if (discriminant > 0) {\n\t\t// Three real roots\n\t\t// Viete's solution to the cubic\n\t\tconst alpha = Math.sqrt(-3/a);\n\t\tconst beta = Math.acos(3*b/(2*a) * alpha);\n\t\tconst roots = []\n\n\t\tfor (var k=0; k<3; k++) {\n\t\t\troots.push(2 * Math.cos(\n\t\t\t\t(beta - 2*Math.PI*k)/3\n\t\t\t) / alpha);\n\t\t}\n\t\troots.sort((a, b) => a-b);\n\t\treturn roots;\n\t} else {\n\t\t// One real root\n\t\t// Cardano's formula\n\t\tconst alpha = Math.sqrt(discriminant / (-16 * 4 * 27));\n\t\tconst root = Math.cbrt(-b/2 + alpha) + Math.cbrt(-b/2 - alpha);\n\t\treturn [root];\n\t}\n}\n\nexport {findRoots};\n","import {findRoots} from './analysis.js';\n\n\nconst SEGMENTS = 128;\nconst INFINITY = 1e5;\n\nfunction norm(x, z) {\n    return 1/Math.max(Math.abs(x), Math.abs(z), 1);\n}\n\nfunction affineCurvePoints(a, b) {\n    const roots = findRoots(a, b);\n    const f = (x) => Math.pow(x, 3) + a*x + b;\n    var multiComponent = true;\n\n    // Expand double root to three (non-unique) roots\n    if (roots.length === 2) {\n        multiComponent = false;\n        const x = (roots[0] + roots[1]) / 2;\n        if (f(x) > 0) {\n            roots.push(roots[1]);\n        } else {\n            roots.shift();\n        }\n    }\n\n    // Expand single root if curve has local extrema\n    if (roots.length === 1 && a < 0) {\n        const extremum = Math.sqrt(-a/3);\n        if (f(extremum) > 0){\n            multiComponent = false;\n            roots.push(extremum, extremum);\n        }\n    }\n\n    if (roots.length === 1) {\n        // Single component\n        const root = roots[0];\n        const local_scale = Math.max(Math.abs(root), 1)/200;\n        const multiplier = 15/SEGMENTS;\n\n        const points = [];\n        for (var i = 0; i < SEGMENTS-1; i++) {\n            points.push(root + local_scale * Math.sinh(i * multiplier));\n        }\n        points.push(INFINITY);\n        return [points];\n    } else {\n        // Choose array componentSizes for each component\n        // Depending on whether curve itself is multi-component\n        const componentSize = multiComponent ? SEGMENTS : SEGMENTS/2;\n\n        // First component\n        const pointsA = [roots[0]];\n        const omegaA = Math.PI / (componentSize-2);\n        const radiusA = (roots[1] - roots[0])/2;\n        const centerA = (roots[0] + roots[1])/2;\n        for (i = 0; i < componentSize-2; i++) {\n            pointsA.push(\n                centerA - radiusA * \n                Math.cos(i * omegaA)\n            );\n        }\n        pointsA.push(roots[1]);\n\n        // Second component\n        const local_scale = Math.max(Math.abs(roots[2] - roots[0]), 1)/200;\n        const multiplierB = 15/componentSize;\n\n        const pointsB = [];\n        for (i = 0; i < componentSize-1; i++) {\n            pointsB.push(roots[2]\n                + local_scale * Math.sinh(i * multiplierB));\n        }\n        pointsB.push(INFINITY);\n\n        if (multiComponent) {\n            return [pointsA, pointsB];\n        } else {\n            pointsA.push(...pointsB);\n            return [pointsA];\n        }\n    }\n}\n\n\n/*\n * Returns a buffer array representing the graph of the given curve.\n * The array should be interpreted in groups of six,\n * each group representing the start and end coordinates\n * of a single line segment.\n *\n * Input is the 'reduced' attribute of a Curve.\n */\nfunction affineCurveGeometry(reduced) {\n    const output = [];\n\n    if (typeof reduced === 'undefined') {\n        reduced = {coefficients: undefined, map: undefined};\n    }\n\n    const curve = reduced.coefficients;\n    const map = reduced.map;\n\n    // Placeholder for empty curve\n    if (typeof curve !== 'undefined') {\n        // Reduce given curve\n        const [a, b] = curve.map((x) => x.toJSNumber());\n        const f = (function(x) {\n            const y = Math.sqrt(Math.pow(x, 3) + a*x + b);\n            return isNaN(y) ? 0 : y;\n        });\n\n        // Construct geometry\n        const xLists = affineCurvePoints(a, b);\n        for (var xList of xLists) {\n            const yList = xList.map(f);\n            const points = [];\n            const reversePoints = [];\n\n            // Construct appropriate points\n            for (var i=0; i < xList.length; i++) {\n                points.push(xList[i], 1, yList[i]);\n                reversePoints.push(-yList[i], 1, xList[i]);\n            }\n            reversePoints.reverse();\n            reversePoints.push(...points);\n            output.push(reversePoints);\n        }\n\n        // Transform under affine map\n        const inverseMap = map.inverse();\n        for (var component of output) {\n            for (i=0; i<component.length; i += 3) {\n                const [X, Y] = [component[i], component[i+2]];\n                const [x, y] = inverseMap.transformFloat(X, Y);\n                component[i] = x;\n                component[i+2] = y;\n            }\n        }\n    } else {\n        const array = [];\n        while (array.length < SEGMENTS*6) {\n            array.push(0, 0, 0);\n        }\n        output.push(array);\n    }\n    return output.map((x) => new Float32Array(x));\n}\n\n\n/*\n * Helper function for curveSurfaceGeometry.\n */\nfunction pushPoints(array, x, z) {\n    const alpha = norm(x, z);\n    x *= alpha;\n    z *= alpha;\n\n    array.push(0, 0, 0, x, alpha, z);\n    array.push(0, 0, 0, -x, -alpha, -z);\n}\n\n\n/*\n * Constructs the geometry for the curve surface\n * in projective space (3D view).\n *\n * Returns an index array and a Float32Array representing\n * the positions of the points.\n *\n * The position array should be read in groups of three,\n * each representing the xyz coordinates of a vertex in the geometry.\n *\n * If the curve contains two connected components,\n * the first half of the position array corresponds to the\n * \"loop\" component, while the second half corresponds to\n * the unbounded component.\n *\n * If the curve contains one connected component,\n * the second half of the position array will be padded with zeros.\n *\n * For performance reasons, the output of\n * affineCurveGeometry(curve) is passed as an argument.\n */\nfunction curveSurfaceGeometry(affinePoints) {\n    const output = [];\n    const index = [];\n\n    if (typeof affinePoints === 'undefined') {\n        affinePoints = affineCurveGeometry();\n    }\n\n    if (affinePoints.length === 2) {\n        /*** Construct loop component ***/\n        const loopPoints = affinePoints.shift();\n        const nPoints = loopPoints.length/3;\n\n        for (var i = 0; i < nPoints; i++) {\n            pushPoints(output,\n                loopPoints[3*i],\n                loopPoints[3*i+2]);\n            index.push(4*i, 4*i+1, (4*i+5) % (4*nPoints));\n            index.push(4*i+2, 4*i+3, (4*i+7) % (4*nPoints));\n        }\n    }\n\n    /*** Construct unbounded component ***/\n    const mainPoints = affinePoints[0];\n    const nPoints = mainPoints.length/3;\n    const offset = 2*index.length/3;\n\n    // Add points to geometry\n    for (i = 0; i < mainPoints.length; i += 3) {\n        pushPoints(output, mainPoints[i], mainPoints[i+2]);\n    }\n\n    // Add appropriate indexed triangles\n    for (i = 0; i < nPoints - 1; i++) {\n        const curr = offset + 4*i;\n        index.push(curr,   curr+1, curr+5);\n        index.push(curr+2, curr+3, curr+7);\n    }\n\n    // Add two indexed triangles for projective point at infinity\n    const last = offset + 4*nPoints - 1;\n    index.push(last-1, last, offset+1);\n    index.push(last-3, last-2, offset+3);\n\n    while (output.length < SEGMENTS * 48) {\n        output.push(0, 0, 0);\n    }\n    return [index, new Float32Array(output)];\n}\n\nexport {affineCurveGeometry, curveSurfaceGeometry};\n","import * as THREE from 'three';\nimport OrbitControls from 'three-orbitcontrols';\n\nimport {\n    affineCurveGeometry, curveSurfaceGeometry\n} from 'math/graphics.js';\n\n/***** Setup *****/\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(\n    75, window.innerWidth/window.innerHeight,\n    1e-2, 1e8);\nvar orbitControls;\n\nconst CURVE_COLOR = 0x66B5F3;\n\n\n\n/***** Main Scene *****/\n/** Elliptic curve **/\nconst curveLineMaterial = new THREE.LineBasicMaterial({\n    color: CURVE_COLOR, linewidth: 4});\n\n// Loop component of two-component elliptic curve (optional)\nconst curveLineGeoA = new THREE.BufferGeometry();\ncurveLineGeoA.addAttribute('position',\n    new THREE.BufferAttribute(affineCurveGeometry()[0], 3)\n);\nconst curveLineA = new THREE.LineLoop(curveLineGeoA, curveLineMaterial);\nscene.add(curveLineA);\n\n// Unbounded component elliptic curve\nconst curveLineGeoB = new THREE.BufferGeometry();\ncurveLineGeoB.addAttribute('position',\n    new THREE.BufferAttribute(affineCurveGeometry()[0], 3)\n);\nconst curveLineB = new THREE.Line(curveLineGeoB, curveLineMaterial);\nscene.add(curveLineB);\n\n/** Coordinate Axes **/\n// Main (xz) axes\nconst axesMaterial = new THREE.LineBasicMaterial({color: 0xFFFFFF});\nconst axesGeo = new THREE.BufferGeometry();\naxesGeo.addAttribute('position',\n    new THREE.BufferAttribute(new Float32Array([\n        -1, 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, 1\n    ]), 3)\n);\nconst axes = new THREE.LineSegments(axesGeo, axesMaterial);\naxes.position.setY(0.99);\nscene.add(axes);\n\n// y-axis (only visible in 3D)\nconst yAxisMaterial = new THREE.LineBasicMaterial({\n    color: 0xFFFFFF, transparent: true, opacity: 0});\nconst yAxisGeo = new THREE.BufferGeometry();\nyAxisGeo.addAttribute('position',\n    new THREE.BufferAttribute(new Float32Array([0, -1, 0, 0, 1, 0]), 3)\n);\nconst yAxis = new THREE.Line(yAxisGeo, yAxisMaterial);\nyAxis.visible = false;\nscene.add(yAxis);\n\n/** Surfaces (3D) **/\n// Projective curve surface\nvar curveSurfaceMaterial = new THREE.MeshPhongMaterial({\n    color: CURVE_COLOR, side: THREE.DoubleSide,\n    transparent: true, opacity: 0\n});\n\nconst curveSurfaceGeo = new THREE.BufferGeometry();\nconst [index, geoPoints] = curveSurfaceGeometry();\ncurveSurfaceGeo.setIndex(index);\ncurveSurfaceGeo.addAttribute('position',\n    new THREE.BufferAttribute(geoPoints, 3));\n\nconst curveSurface = new THREE.Mesh(curveSurfaceGeo, curveSurfaceMaterial);\ncurveSurface.visible = false;\nscene.add(curveSurface);\n\n\n// Plane at y=1\nconst planeMaterial = new THREE.MeshPhongMaterial({\n    color: 0x888888, side: THREE.DoubleSide,\n    transparent: true, opacity: 0\n});\nconst planeGeo = new THREE.PlaneBufferGeometry(2, 2);\nconst plane = new THREE.Mesh(planeGeo, planeMaterial);\nplane.rotateX(Math.PI/2);\nplane.position.setY(1);\nscene.add(plane);\n\n\n/** Lights **/\nconst ambientLight = new THREE.AmbientLight(0x404040, 0.1);\nscene.add(ambientLight);\n\nconst directionalLight = new THREE.DirectionalLight(0xFFFFFF, 0.3);\ndirectionalLight.target.position.set(5, 0, -1);\nscene.add(directionalLight);\nscene.add(directionalLight.target);\n\nconst light = new THREE.PointLight(0xFFFFFF, 0.7);\nscene.add(light);\n\n/*\nconst testCube = new THREE.Mesh(\n        new THREE.BoxBufferGeometry(1, 1, 1),\n        new THREE.MeshLambertMaterial({color: 0xFF0000})\n);\nscene.add(testCube);\n*/\n\n\n\n/***** API *****/\nfunction initialize() {\n    const canvas = document.getElementById('main-view');\n\n    // Set initial camera state\n    camera.quaternion.set(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5));\n    camera.quaternion.normalize();\n    camera.position.set(0, 8, 0);\n    camera.updateProjectionMatrix();\n\n    // Initialize orbit controls\n    orbitControls = new OrbitControls(camera, canvas);\n    orbitControls.dampingFactor = 0.15;\n    orbitControls.rotateSpeed = 0.15;\n    orbitControls.screenSpacePanning = true;\n}\n\nfunction update() {\n    if (orbitControls.enabled) {orbitControls.update();}\n\n    const uxScale = 10 * Math.max(camera.position.length(), 0.1);\n    axes.scale.setScalar(uxScale);\n    plane.scale.setScalar(uxScale);\n    yAxis.scale.setScalar(uxScale);\n    curveSurface.scale.setScalar(uxScale);\n\n    light.position.copy(camera.position);\n}\n\n// List of objects whose visibility depends on 2D/3D switch\nconst toggle3DList = [plane, yAxis, curveSurface];\n\nexport {\n    initialize, update,\n    toggle3DList,\n\n    scene, camera, orbitControls,\n    curveLineA, curveLineB, curveSurface,\n    axes, yAxis, plane\n};\n","import * as THREE from 'three';\nimport * as SCENE from './scene.js';\n\nvar transitions = [];\nconst EPSILON = 1e-5;\nconst cubicEase = (x) => (x > 1) ? 1 : (1-Math.pow(1-x, 3));\nconst cosineEase = (x) => (x > 1) ? 1 : (1-Math.cos(x * Math.PI))/2;\n\n/***** Helper Functions *****/\nfunction runTransitions() {\n\tconst running = [];\n\tconst now = (new Date()).getTime();\n\n\twhile (transitions.length > 0) {\n\t\tconst transition = transitions.pop();\n\t\tconst done = transition(now);\n\n\t\tif (!done) {\n\t\t\trunning.push(transition);\n\t\t}\n\t}\n\t\n\twhile (running.length > 0) {\n\t\ttransitions.push(running.pop());\n\t}\n}\n\n\n/***** BEGIN TRANSITIONS *****/\nfunction start3DTransition(view3D) {\n\tSCENE.orbitControls.enabled = false;\n\ttransitions = [];\n\n\tconst now = (new Date()).getTime();\n\tif (!view3D) {\n\t\tconst cameraTarget = SCENE.orbitControls.target.clone();\n\t\tconst cameraPosition = SCENE.camera.position.clone();\n\t\tcameraPosition.sub(cameraTarget);\n\t\tconst cameraDistance = cameraPosition.length();\n\n\t\tconst initialQuaternion = SCENE.camera.quaternion.clone();\n\t\tconst targetQuaternion = new THREE.Quaternion(\n\t\t\t-Math.sqrt(0.5) + EPSILON, 0, 0, Math.sqrt(0.5) + EPSILON);\n\t\ttargetQuaternion.normalize();\n\n\t\ttransitions.unshift(\n\t\t\t(t) => orbitCameraTransition(\n\t\t\t\tt, now, now + 300,\n\t\t\t\tcameraDistance, cameraTarget,\n\t\t\t\tinitialQuaternion, targetQuaternion\n\t\t\t)\n\t\t);\n\t}\n\n\t// Shift axes position\n\ttransitions.unshift(\n\t\t(t) => shiftAxesTransition(t, view3D, now, now + 300)\n\t);\n\n\t// Toggle surface visibility\n\tif (view3D) {\n\t\tfor (var obj of SCENE.toggle3DList) {\n\t\t\tobj.visible = true;\n\t\t}\n\t}\n\tSCENE.yAxis.transparent = true;\n\ttransitions.unshift(\n\t\t(t) => toggleSurfacesTransition(t, view3D, now, now + 300)\n\t);\n\n\t// Re-enable controls after delay\n\ttransitions.unshift(\n\t\t(t) => enableControlsTransition(t, view3D, now + 350)\n\t);\n}\n\nfunction orbitCameraTransition(\n\t\tnow, start, stop,\n\t\tradius, target,\n\t\tq0, q1) {\n\tconst camera = SCENE.camera;\n\tconst alpha = cosineEase((now-start) / (stop-start));\n\n\t// Compute new quaternion\n\tconst quaternion = q0.clone();\n\tquaternion.slerp(q1, alpha);\n\n\t// Compute new camera position\n\tconst newPosition = new THREE.Vector3(0, 0, radius);\n\tnewPosition.applyQuaternion(quaternion);\n\tnewPosition.add(target);\n\n\t// Update camera setup\n\tcamera.quaternion.copy(quaternion);\n\tcamera.position.copy(newPosition);\n\tcamera.updateProjectionMatrix();\n\treturn now > stop;\n}\n\n\nfunction shiftAxesTransition(now, view3D, start, stop) {\n\tconst alpha = cubicEase((now-start) / (stop-start));\n\tconst y = view3D ? (1-alpha) : alpha;\n\tSCENE.axes.position.setY(y);\n\treturn now > stop;\n}\n\nfunction toggleSurfacesTransition(now, view3D, start, stop) {\n\tconst alpha = cubicEase((now-start) / (stop-start));\n\tconst beta = view3D ? alpha : (1-alpha);\n\n\tSCENE.plane.material.opacity = 0.6 * beta;\n\tSCENE.curveSurface.material.opacity = 0.95 * beta;\n\tSCENE.yAxis.material.opacity = beta;\n\n\tif (now > stop) {\n\t\tif (!view3D) {\n\t\t\tfor (var obj of SCENE.toggle3DList) {\n\t\t\t\tobj.visible = false;\n\t\t\t}\n\t\t}\n\t\tSCENE.yAxis.transparent = false;\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\nfunction enableControlsTransition(now, view3D, targetTime) {\n\tif (now < targetTime) {\n\t\treturn false;\n\t} else {\n\t\tconst controls = SCENE.orbitControls;\n\n\t\t// Enable/disable approrpiate features\n\t\tcontrols.enableRotate = view3D;\n\t\tcontrols.enableDamping = view3D;\n\n\t\t// Swap controls mouse buttons\n\t\tif (view3D) {\n\t\t\tcontrols.mouseButtons.LEFT = THREE.MOUSE.LEFT;\n\t\t\tcontrols.mouseButtons.RIGHT = THREE.MOUSE.RIGHT\n\t\t} else {\n\t\t\tcontrols.mouseButtons.LEFT = THREE.MOUSE.RIGHT;\n\t\t\tcontrols.mouseButtons.RIGHT = THREE.MOUSE.LEFT;\n\t\t}\n\t\t\n\t\t// Raise or lower control target appropriately\n\t\tcontrols.target.setY(view3D ? 0 : 1);\n\t\t\n\t\tcontrols.enabled = true;\n\t\treturn true;\n\t}\n}\n\nexport {\n\trunTransitions,\n\tstart3DTransition,\n\tenableControlsTransition\n};\n","import * as THREE from 'three';\n\nimport * as SCENE from './scene.js';\nimport * as TRANS from './transitions.js';\n\nimport {affineCurveGeometry, curveSurfaceGeometry} from 'math/graphics.js';\n\n/***** State *****/\nvar initialized = false;\nvar view3D = false;\n\n/***** Initialization *****/\nvar renderer;\n\nfunction initializeRenderer() {\n    const canvas = document.getElementById('main-view');\n    renderer = new THREE.WebGLRenderer({\n        canvas: canvas,\n        antialias: true,\n        logarithmicDepthBuffer: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio ? window.devicePixelRatio : 1);\n\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    window.addEventListener('resize', handleResize);\n}\n\nfunction handleResize(e) {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    SCENE.camera.aspect = window.innerWidth / window.innerHeight;\n    SCENE.camera.updateProjectionMatrix();\n}\n\nfunction initialize() {\n    initializeRenderer();\n    SCENE.initialize();\n    TRANS.enableControlsTransition(0, view3D, 0);\n    initialized = true;\n}\n\nconst skip = 10;\nlet frame = 0;\nconst debug = false;\n\nfunction animate() {\n    requestAnimationFrame(animate);\n\n    if (debug) {\n        frame += 1;\n        if (frame % skip !== 0) {return;}\n    }\n\n    renderer.render(SCENE.scene, SCENE.camera);\n\n    SCENE.update();\n    TRANS.runTransitions();\n}\n\n\n/***** Interface *****/\nfunction render() {\n    initialize();\n    animate();\n}\n\nfunction updateCurve(curve) {\n    const curveGeo = affineCurveGeometry(curve.reduced);\n\n    const geoA = SCENE.curveLineA.geometry;\n    const posA = geoA.attributes.position;\n    const geoB = SCENE.curveLineB.geometry;\n    const posB = geoB.attributes.position;\n\n    if (curveGeo.length === 1) {\n        posB.copyArray(curveGeo[0]);\n        SCENE.curveLineA.visible = false;\n    } else {\n        posA.copyArray(curveGeo[0]);\n        posA.needsUpdate = true;\n        geoA.computeBoundingSphere();\n\n        posB.copyArray(curveGeo[1]);\n        SCENE.curveLineA.visible = true;\n    }\n    posB.needsUpdate = true;\n    geoB.computeBoundingSphere();\n\n    if (view3D) {\n        const surfaceGeo = SCENE.curveSurface.geometry;\n        const surfacePos = surfaceGeo.attributes.position;\n\n        const [index, geoPoints] = curveSurfaceGeometry(curveGeo);\n        surfaceGeo.setIndex(index);\n        surfacePos.copyArray(geoPoints);\n        surfacePos.needsUpdate = true;\n\n        surfaceGeo.computeBoundingSphere();\n        surfaceGeo.computeVertexNormals();\n    }\n\n}\n\nfunction set3D(newView3D) {\n    if (initialized & (newView3D !== view3D)) {\n        view3D = newView3D;\n        TRANS.start3DTransition(view3D);\n    }\n}\n\nexport default render;\nexport {updateCurve, set3D};\n","import React, {PureComponent} from 'react';\nimport renderScene, {updateCurve, set3D} from './render.js';\nimport './MainView.css';\n\nclass MainView extends PureComponent {\n\tcomponentDidMount() {\n\t\trenderScene();\n\t\tthis.update();\n\t}\n\n\tupdate() {\n\t\tset3D(this.props.view3D);\n\t\tupdateCurve(this.props.curve);\n\t}\n\n\trender() {\n\t\tthis.update();\n\t\treturn <canvas id='main-view'/>;\n\t}\n}\n\nexport default MainView;\n","import bigInt from 'big-integer';\n\n\nclass BigRational {\n    constructor(numerator, denominator=1) {\n        if (numerator instanceof BigRational) {\n            this.n = numerator.n;\n            this.d = numerator.d;\n        } else {\n            this.n = bigInt(numerator);\n            this.d = bigInt(denominator);\n            if (this.d.lt(0)) {\n                this.d = this.d.abs();\n                this.n = bigInt.zero.minus(this.n);\n            }\n            this.reduce();\n        }\n    }\n\n    reduce() {\n        if (this.d.eq(1)) {return;}\n        const gcd = bigInt.gcd(this.d, this.n);\n        this.n = this.n.divide(gcd);\n        this.d = this.d.divide(gcd);\n    }\n\n\n    /***** Unary Arithmetic Operators *****/\n    negate() {\n        return new BigRational(bigInt.zero.minus(this.n), this.d);\n    }\n\n    reciprocal() {\n        return new BigRational(this.d, this.n);\n    }\n\n\n    /***** Binary Arithmetic Operators *****/\n    plus(other) {\n        return new BigRational(\n            this.n.times(other.d).plus(this.d.times(other.n)),\n            this.d.times(other.d)\n        );\n    }\n\n    minus(other) {\n        return this.plus(other.negate());\n    }\n\n    times(other) {\n        other = new BigRational(other);\n        return new BigRational(this.n.times(other.n), this.d.times(other.d));\n    }\n\n    divide(other) {\n        return this.times(other.reciprocal());\n    }\n\n    pow(other) {\n        if (other === 0) {return new BigRational(1)};\n        if (other < 0) {return this.reciprocal().pow(Math.abs(other))};\n\n        // Construct powers of two for efficiency\n        var exponent = 0;\n        var curr = this;\n        const powers = [curr];\n\n        while (other > Math.pow(2, exponent)) {\n            exponent++;\n            curr = curr.times(curr);\n            powers.push(curr);\n        }\n\n        // Compute answer\n        var answer = new BigRational(1);\n        for (var i=0; i <= exponent; i++) {\n            if ((other >> i) % 2 === 1) {\n                answer = answer.times(powers[i]);\n            }\n        }\n\n        return answer;\n    }\n\n\n    /***** Comparison Operators *****/\n    eq(other) {\n        other = new BigRational(other);\n        return this.n.eq(other.n) && this.d.eq(other.d);\n    }\n\n    gt(other) {\n        other = new BigRational(other);\n        return this.n.times(other.d).gt(other.n.times(this.d));\n    }\n\n    lt(other) {\n        return other.gt(this);\n    }\n\n    gte(other) {return this.gt(other) || this.eq(other);}\n    lte(other) {return this.lt(other) || this.eq(other);}\n\n\n    /***** Utility Functions *****/\n    toString() {\n        if (this.d.eq(1)) {\n            return this.n.toString();\n        } else {\n            return this.n.toString() + '/' + this.d.toString();\n        }\n    }\n}\n\nexport default BigRational;\n","import bigInt from 'big-integer';\nimport BigRational from './bigRational.js';\n\n/*\n * Represents the affine map\n *\n * (x, y) -> (\n *     a_x * x + b_x * y + c_x,\n *     a_y * x + b_y * y + c_y\n * ).\n */\nclass AffineMap {\n\t/*\n\t * Coefficients are [a_x, b_x, c_x, a_y, b_y, c_y],\n\t * in that order.\n\t *\n\t * All coefficients are implicitly divided by 'denominator'.\n\t * This allows the use of bigInt arithmetic.\n\t *\n\t * Precondition: denominator is nonzero\n\t */\n\tconstructor(coefficients, denominator=1) {\n\t\tthis.coefficients = coefficients.map((x) => bigInt(x));\n\t\tthis.denominator = bigInt(denominator);\n\t\tif (this.denominator.lt(0)) {\n\t\t\tthis.denominator = this.denominator.abs();\n\t\t\tthis.coefficients = this.coefficients.map((x) => bigInt.zero.minus(x));\n\t\t}\n\t\tthis.reduce();\n\t}\n\t\n\treduce() {\n\t\tvar gcd = this.denominator;\n\n\t\tfor (var coefficient of this.coefficients) {\n\t\t\tgcd = bigInt.gcd(gcd, coefficient);\n\t\t}\n\n\t\tthis.denominator = this.denominator.divide(gcd);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tthis.coefficients[i] = this.coefficients[i].divide(gcd);\n\t\t}\n\t}\n\n\tcompose(other) {\n\t\tconst [a, b, c, d, e, f] = this.coefficients;\n\t\tconst [A, B, C, D, E, F] = other.coefficients\n\n\t\treturn new AffineMap([\n\t\t\ta.times(A).plus(b.times(D)),\n\t\t\ta.times(B).plus(b.times(E)),\n\t\t\ta.times(C).plus(b.times(F)).plus(c.times(other.denominator)),\n\t\t\td.times(A).plus(e.times(D)),\n\t\t\td.times(B).plus(e.times(E)),\n\t\t\td.times(C).plus(e.times(F)).plus(f.times(other.denominator))\n\t\t], this.denominator.times(other.denominator));\n\t}\n\n\tinverse() {\n\t\tconst [a, b, c, d, e, f] = this.coefficients;\n\t\tconst determinant = a.times(e).minus(b.times(d));\n\t\tconst den = this.denominator;\n\n\t\tconst coefficients = [\n\t\t\te.times(den),\n\t\t\tbigInt.zero.minus(b).times(den),\n\t\t\tb.times(f).minus(c.times(e)),\n\t\t\tbigInt.zero.minus(d).times(den),\n\t\t\ta.times(den),\n\t\t\tc.times(d).minus(a.times(f)),\n\t\t];\n\n\t\treturn new AffineMap(coefficients, determinant);\n\t}\n\n\ttransformFloat(x, y) {\n\t\tconst [a, b, c, d, e, f] = this.coefficients.map(\n\t\t\t(x) => x.toJSNumber()\n\t\t);\n\t\tconst den = this.denominator.toJSNumber();\n\t\treturn [\n\t\t\t(a*x + b*y + c)/den,\n\t\t\t(d*x + e*y + f)/den\n\t\t];\n\t}\n\n\ttransformBigRational(x, y) {\n\t\tconst [a, b, c, d, e, f] = this.coefficients.map(\n\t\t\t(x) => new BigRational(x)\n\t\t);\n\t\tconst den = new BigRational(this.denominator);\n\t\treturn [\n\t\t\ta.times(x).plus(b.times(y)).plus(c).divide(den),\n\t\t\td.times(x).plus(e.times(y)).plus(f).divide(den),\n\t\t];\n\t}\n\n\ttoString() {\n\t\tconst [a, b, c, d, e, f] = this.coefficients;\n\t\tconst D = this.denominator;\n\n\t\tconst mapString = `(x, y) -> (${a}x + ${b}y + ${c}, ${d}x + ${e}y + ${f})`;\n\t\tif (D.eq(1)) {\n\t\t\treturn mapString;\n\t\t} else {\n\t\t\treturn mapString + ' / ' + D.toString();\n\t\t}\n\t}\n}\n\nconst IdentityMap = new AffineMap([1, 0, 0, 0, 1, 0]);\n\nexport default AffineMap;\nexport {IdentityMap};\n","import bigInt from 'big-integer';\n\nimport AffineMap, {IdentityMap} from './affineMap.js';\n\n/*\n * Reduces the given general elliptic curve\n * to the Weierstrass form\n *\n * Y^2 + a_1 XY + a_3 Y = X^3 + a_2 X^2 + a_4 X + a_6.\n *\n * Input is an array of ten BigInts,\n * interpreted as described in App.js.\n *\n * Returns the coefficients [a_i] of the transformed\n * equation and the map (x, y) -> (X, Y).\n */\nfunction reduce1(curve) {\n    // NOT IMPLEMENTED\n    return curve;\n}\n\n\n/*\n * Reduces the given Weierstrass form\n *\n * y^2 + axy + cy = x^3 + bx^2 + dx + e.\n *\n * to the reduced form\n *\n * Y^2 = X^3 + AX^2 + BX + C.\n *\n * Input is an array of five BigInts\n * representing the coefficients [a, b, c, d, e].\n *\n * Returns the coefficients [A, B, C] of the transformed\n * equation and the map (x, y) -> (X, Y).\n */\nfunction reduce2(curve) {\n    const [a, b, c, d, e] = curve;\n    const coefficients = [\n        b.times(4).plus(a.times(a)),\n        d.times(2).plus(a.times(c)).times(8),\n        e.times(4).plus(c.times(c)).times(16)\n    ];\n\n    const map = new AffineMap([\n        4, 0, 0,\n        a.times(4), 8, c.times(4)\n    ]);\n    return [coefficients, map];\n}\n\n/*\n * Reduces the given curve\n *\n * y^2 = x^3 + ax^2 + bx + c\n *\n * to the form\n *\n * Y^2 = X^3 + AX + B.\n *\n * Returns the coefficients [A, B]\n * and the map (x, y) -> (X, Y).\n */\nfunction reduce3(curve) {\n    const [a, b, c] = curve;\n    const coefficients = [\n        b.times(3).minus(a.times(a)).times(27),\n        a.times(\n            a.times(a.times(2)).minus(b.times(9))\n        ).plus(c.times(27)).times(27)\n    ]\n\n    const map = new AffineMap([\n        9, 0, a.times(3),\n        0, 27, 0\n    ]);\n    return [coefficients, map];\n}\n\n/*\n * Reduces the given curve\n *\n * y^2 = x^3 + ax + b\n *\n * to the form\n *\n * Y^2 = X^3 + AX + B\n *\n * with minimal discriminant.\n *\n * Returns the coefficients [A, B]\n * and the map (X, Y) -> (x, y).\n */\nfunction minimize(curve) {\n    const [a, b] = curve;\n\n    if (a.eq(0) && b.eq(0)) {\n        const map = new AffineMap([\n            6, 0, 0,\n            0, 1, 0\n        ], 216);\n        return [curve, map];\n    }\n\n    var gcd = bigInt.gcd(a.pow(3), b.pow(2));\n    var scale = bigInt.one;\n\n    var p = bigInt(2);\n    while (p.pow(12).leq(gcd)) {\n        if (gcd.isDivisibleBy(p.pow(12))) {\n            gcd = gcd.divide(p.pow(12));\n            scale = scale.times(p);\n        } else {\n            p = p.plus(1);\n        }\n    }\n\n    const coefficients = [\n        a.divide(scale.pow(4)),\n        b.divide(scale.pow(6))\n    ];\n\n    const map = new AffineMap([\n        scale.pow(4), 0, 0,\n        0, scale.pow(3), 0\n    ], scale.pow(6));\n    return [coefficients, map];\n}\n\n\n/*\n * Composes the given list of functions.\n */\nfunction compose(functions) {\n    return (function(curve) {\n        var overallMap = IdentityMap;\n        var map;\n\n        for (var f of functions) {\n            [curve, map] = f(curve);\n            overallMap = map.compose(overallMap);\n        }\n\n        return [curve, overallMap];\n    });\n}\n\nconst reduceFull = compose([reduce2, reduce3, minimize]);\n\nexport {\n    reduce1,\n    reduce2,\n    reduce3,\n    minimize\n};\nexport default reduceFull;\n","import bigInt from 'big-integer';\n\n// Precompute small primes\nconst MAX = 300000;\nconst sieve = new Array(MAX).fill(true);\n\nsieve[0] = false;\nsieve[1] = false;\nfor (let i=2; i < Math.sqrt(MAX); i++) {\n\tif (sieve[i]) {\n\t\tfor (let j = i*i; j < MAX; j+= i) {\n\t\t\tsieve[j] = false;\n\t\t}\n\t}\n}\n\nconst small_primes = [];\nfor (let i=2; i < MAX; i++) {\n\tif (sieve[i]) {small_primes.push(bigInt(i));}\n}\n\n/*\n * Factors an integer n.\n *\n * Returns an array of tuples (p_i, e_i),\n * so that n = product(p_i ^ e_i),\n * the p_i are prime,\n * and all e_i > 0.\n *\n * For performance reasons,\n * factorization may be inaccurate\n * if n contains prime divisors\n * with more than 12 digits.\n */\nfunction factor(n) {\n\tn = bigInt(n);\n\tif (n.lt(2)) {\n\t\treturn [];\n\t}\n\n\tconst factorization = [];\n\n\tfor (var prime of small_primes) {\n\t\tvar exponent = 0;\n\t\twhile (n.isDivisibleBy(prime)) {\n\t\t\texponent++;\n\t\t\tn = n.divide(prime);\n\t\t}\n\n\t\tif (exponent > 0) {\n\t\t\tfactorization.push([prime, exponent]);\n\t\t}\n\n\t\tif (prime.pow(2).gt(n)) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (n.gt(1)) {\n\t\tfactorization.push([n, 1]);\n\t}\n\treturn factorization;\n}\n\nexport {factor};\n","import BigRational from './bigRational.js';\n\n/*\n * Represents a rational point on a reduced elliptic curve.\n *\n * The attributes x and y are BigRationals representing\n * the x and y coordinates of the curve.\n *\n * The point at infinity is represented by setting\n * x, y = NaN.\n */\nclass RationalPoint {\n    constructor(reducedCurve, x, y) {\n        this.curve = reducedCurve.reduced;\n        if (Number.isNaN(x)) {\n            this.x = NaN;\n            this.y = NaN;\n        } else {\n            this.x = new BigRational(x);\n            this.y = new BigRational(y);\n        }\n    }\n\n    isIdentity() {\n        return Number.isNaN(this.x);\n    }\n\n    /***** Group Operations *****/\n    // All group operations assume that 'this'\n    // and 'other' share the same elliptic curve!\n    eq(other) {\n        if (this.isIdentity()) {return other.isIdentity();}\n        if (other.isIdentity()) {return this.isIdentity();}\n        return this.x.eq(other.x) && this.y.eq(other.y);\n    }\n\n    plus(other) {\n        // Check if either argument is identity\n        if (this.isIdentity()) {return other;};\n        if (other.isIdentity()) {return this;};\n\n        // Check if other point is additive inverse\n        if (this.x.eq(other.x) && this.y.negate().eq(other.y)) {\n            return getIdentity(this.curve);\n        }\n\n        // Perform point addition\n        const [a, b] = this.curve.coefficients.map((x) => new BigRational(x));\n\n        // Construct line through points\n        var slope;\n        if (this.eq(other)) {\n            // Construct tangent line\n            // We don't need to worry about 2-torsion points since\n            // we already checked for other = this.inverse()\n            slope = this.x.pow(2).times(3).plus(a).divide(this.y.times(2));\n        } else {\n            // Construct secant line\n            slope = other.y.minus(this.y).divide(other.x.minus(this.x));\n        }\n        const intercept = this.y.minus(slope.times(this.x));\n\n        // Synthetic division to locate third point\n        const cubic = substitute(a, b, slope, intercept);\n        const quadratic = syntheticDivide(cubic, this.x)[0];\n        const linear = syntheticDivide(quadratic, other.x)[0];\n        const X = linear[0].negate();\n        const Y = slope.times(X).plus(intercept).negate();\n        return new RationalPoint(this.curve, X, Y);\n    }\n\n    inverse() {\n        return new RationalPoint(this.curve, this.x, this.y.negate());\n    }\n\n    minus(other) {\n        return this.plus(other.inverse());\n    }\n\n    // Integer multiplication (repeated addition)\n    times(other) {\n        if (other === 0) {return getIdentity(this.curve);}\n        if (other < 0) {return this.inverse().times(Math.abs(other));}\n\n        // Construct powers of two for efficiency\n        var exponent = 0;\n        var curr = this;\n        const powers = [curr];\n\n        while (other > Math.pow(2, exponent)) {\n            exponent++;\n            curr = curr.plus(curr);\n            powers.push(curr);\n        }\n\n        // Compute answer\n        var answer = getIdentity(this.curve);\n        for (var i=0; i<=exponent; i++) {\n            if ((other >> i) % 2 === 1) {\n                answer = answer.plus(powers[i]);\n            }\n        }\n\n        return answer;\n    }\n\n    /***** Group Theory *****/\n    order() {\n        var curr = this;\n        for (let i = 1; i <= 12; i++) {\n            if (curr.isIdentity()) {\n                this.order = () => i;\n                return i;\n            }\n            curr = curr.plus(this);\n        }\n\n        // By Mazur's theorem\n        this.order = () => Infinity;\n        return Infinity;\n    }\n\n\n    /***** Utility Functions *****/\n    toString() {\n        if (this.isIdentity()) {\n            return '\\u221E @ ' + this.curve.toString();\n        } else {\n            return '('\n                + this.x.toString() + ', '\n                + this.y.toString() + ') @ ' + this.curve.toString();\n        }\n    }\n}\n\nfunction getIdentity(curve) {\n    return new RationalPoint(curve, NaN, NaN);\n}\n\n/*\n * Substitutes y = cx + d\n * into the curve y^2 = x^3 + ax + b.\n *\n * Returns [e, f, g] so that the\n * new equation can be written as\n * x^3 + ex^2 + fx + g = 0.\n *\n * All inputs and outputs are BigRationals.\n */\nfunction substitute(a, b, c, d) {\n    return [\n        c.pow(2).negate(),\n        a.minus(c.times(d).times(2)),\n        b.minus(d.pow(2))\n    ];\n}\n\n/*\n * Divides the monic polynomial\n * x^{n+1} + a_0 x^n + a_1 x^{n-1} + ... + a_n\n * by x-a.\n *\n * The 'coefficients' array should be an array of BigRationals\n * representing [a_0, ..., a_n].\n * The 'a' argument is a BigRational representing a.\n *\n * Outputs the coefficients of the quotient,\n * and the remainder.\n */\nfunction syntheticDivide(coefficients, a) {\n    coefficients = coefficients.map((x) => new BigRational(x));\n    a = new BigRational(a);\n    const output = [];\n    var curr = new BigRational(1);\n\n    for (var coefficient of coefficients) {\n        curr = curr.times(a).plus(coefficient);\n        output.push(curr);\n    }\n    const remainder = output.pop();\n    return [output, remainder];\n}\n\n\nexport default RationalPoint;\nexport {getIdentity, substitute, syntheticDivide};\n","import bigInt from 'big-integer';\n\nimport reduceFull from './reduce.js';\nimport {factor} from './numberTheory.js';\nimport {findRoots} from './analysis.js';\nimport RationalPoint from './rationalPoint.js';\n\n\n/*\n * Represents an elliptic curve with equation\n * y^2 + axy + cy = x^3 + bx^2 + dx + e.\n */\nclass Curve {\n    constructor(...coefficients) {\n        this.coefficients = coefficients.map((x) => bigInt(x));\n        this.computeReduction();\n        this.computeTorsionPoints();\n    }\n\n    computeReduction() {\n        const [curve, map] = reduceFull(this.coefficients);\n        this.reduced = new ReducedCurve(curve, map);\n    }\n\n    computeTorsionPoints() {}\n\n    toString() {\n        const [a, b, c, d, e] = this.coefficients;\n        return 'y\\u00B2 + '\n            + a.toString() + 'xy + '\n            + c.toString() + 'y = x\\u00B3 + '\n            + b.toString() + 'x\\u00B2 + '\n            + d.toString() + 'x + '\n            + e.toString();\n    }\n}\n\n\n/*\n * Represents an elliptic curve with equation\n * y^2 = x^3 + ax + b.\n */\nclass ReducedCurve extends Curve {\n    constructor(coefficients, map) {\n        super(...coefficients);\n        this.map = map;\n    }\n\n    computeReduction() {\n        this.reduced = this;\n    }\n\n    computeDiscriminant() {\n        const [a, b] = this.coefficients;\n        this.discriminant = a.pow(3).times(4).plus(\n            b.pow(2).times(27)\n        ).times(-16);\n        this.discriminantFactorization = factor(this.discriminant.abs());\n    }\n\n    computeTorsionPoints() {\n        this.computeDiscriminant();\n\n        const candidates = this.getCandidateTorsionPoints().map(\n            (p) => new RationalPoint(this, ...p)\n        );\n\n        this.torsionPoints = [];\n        for (var p of candidates) {\n            if (isFinite(p.order())) {this.torsionPoints.push(p)};\n        }\n    }\n\n    getCandidateTorsionPoints() {\n        const yCandidates = [bigInt.one];\n\n        // Nagell-Lutz theorem\n        for (var [prime, exponent] of this.discriminantFactorization) {\n            if (prime.eq(2)) {exponent -= 4}; // Reduced discriminant\n            if (exponent < 2) {continue;}\n\n            const currentCandidates = [...yCandidates];\n            for (var i=1; 2*i <= exponent; i++) {\n                const multiplier = prime.pow(i);\n                yCandidates.push(...currentCandidates.map(\n                    (x) => x.times(multiplier)\n                ));\n            }\n        }\n\n        yCandidates.push(bigInt.zero);\n\n        // Compute possible corresponding x-values\n        const candidates = [];\n        const [a, b] = this.coefficients;\n        for (var y of yCandidates) {\n            // Find roots of corresponding cubic\n            const roots = findRoots(\n                a.toJSNumber(),\n                b.minus(y.pow(2)).toJSNumber());\n\n            // Check if roots are integral solutions\n            for (var x of roots) {\n                if (Math.abs(x - Math.round(x)) > 1e-5) {continue;}\n                x = bigInt(Math.round(x));\n                if (x.pow(3).plus(a.times(x)).plus(b).eq(y.pow(2))) {\n                    candidates.push([x, y]);\n                    if (!y.eq(0)) {candidates.push([x, bigInt.zero.minus(y)])};\n                }\n            }\n        }\n\n        // Point at infinity\n        candidates.push([NaN, NaN]);\n        return candidates;\n    }\n\n    toString() {\n        const [a, b] = this.coefficients;\n        return 'y\\u00B2 = x\\u00B3 + ' + a.toString() + 'x + ' + b.toString();\n    }\n}\n\nexport default Curve;\nexport {ReducedCurve};\n","import {createMuiTheme} from '@material-ui/core/styles';\nimport {blue} from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n  },\n});\n\nexport default theme;\n","import React, {PureComponent} from 'react';\n\nimport bigInt from 'big-integer';\n\nimport ControlBar from './components/ControlBar/ControlBar.js';\nimport InfoBar from './components/InfoBar';\nimport MainView from './components/MainView/MainView.js';\n\nimport Curve from './math/curve.js';\n\nimport 'katex/dist/katex.min.css';\n\nimport {MuiThemeProvider} from '@material-ui/core/styles';\nimport theme from './theme.js';\nimport './App.css';\n\n\n/*\n * curve: An array of six BigInts representing the currently shown elliptic curve.\n *        The array [a_1, a_2, a_3, a_4, a_6] represents\n *        coefficients in the Weierstrass equation\n *        y^2 + a_1 xy + a_3 y = x^3 + a_2 x^2 + a_4 x + a_6.\n */\n\nclass App extends PureComponent {\n    constructor(props) {\n        super(props);\n\n        // y^2 = x^3 - x\n        const initialCurve = [0, 0, 0, -1, 0];\n\n        this.state = {\n            curve: initialCurve.map((x) => bigInt(x)),\n            view3D: false,\n        }\n    }\n\n    toggle3DView() {\n        this.setState({view3D: !this.state.view3D});\n    }\n\n    setCoefficient(i, v) {\n        const curve = this.state.curve;\n        curve[i] = v;\n        this.setState({curve: [...curve]});\n    }\n\n    render() {\n        const {view3D} = this.state;\n        const curve = new Curve(...this.state.curve);\n        return (\n            <MuiThemeProvider theme={theme}>\n                <ControlBar\n                    curve={curve}\n                    setCoefficient={this.setCoefficient.bind(this)}\n\n                    view3D={view3D}\n                    handle3DSwitch={this.toggle3DView.bind(this)}\n                />\n                <div className='content'>\n                    <MainView\n                        curve={curve}\n                        view3D={view3D}\n                    />\n                    <InfoBar\n                        curve={curve}\n                        view3D={view3D}\n                    />\n                </div>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}